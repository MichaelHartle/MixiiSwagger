/* 
 * Mixii Mobile API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// PhoneVerificationCreationResponse
    /// </summary>
    [DataContract]
    public partial class PhoneVerificationCreationResponse :  IEquatable<PhoneVerificationCreationResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PhoneVerificationCreationResponse" /> class.
        /// </summary>
        /// <param name="Carrier">Carrier.</param>
        /// <param name="IsCellphone">IsCellphone.</param>
        /// <param name="Message">Message.</param>
        /// <param name="SecondsToExpire">SecondsToExpire.</param>
        /// <param name="Uuid">Uuid.</param>
        /// <param name="Success">Success.</param>
        public PhoneVerificationCreationResponse(string Carrier = default(string), bool? IsCellphone = default(bool?), string Message = default(string), int? SecondsToExpire = default(int?), string Uuid = default(string), bool? Success = default(bool?))
        {
            this.Carrier = Carrier;
            this.IsCellphone = IsCellphone;
            this.Message = Message;
            this.SecondsToExpire = SecondsToExpire;
            this.Uuid = Uuid;
            this.Success = Success;
        }
        
        /// <summary>
        /// Gets or Sets Carrier
        /// </summary>
        [DataMember(Name="carrier", EmitDefaultValue=false)]
        public string Carrier { get; set; }

        /// <summary>
        /// Gets or Sets IsCellphone
        /// </summary>
        [DataMember(Name="is_cellphone", EmitDefaultValue=false)]
        public bool? IsCellphone { get; set; }

        /// <summary>
        /// Gets or Sets Message
        /// </summary>
        [DataMember(Name="message", EmitDefaultValue=false)]
        public string Message { get; set; }

        /// <summary>
        /// Gets or Sets SecondsToExpire
        /// </summary>
        [DataMember(Name="seconds_to_expire", EmitDefaultValue=false)]
        public int? SecondsToExpire { get; set; }

        /// <summary>
        /// Gets or Sets Uuid
        /// </summary>
        [DataMember(Name="uuid", EmitDefaultValue=false)]
        public string Uuid { get; set; }

        /// <summary>
        /// Gets or Sets Success
        /// </summary>
        [DataMember(Name="success", EmitDefaultValue=false)]
        public bool? Success { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PhoneVerificationCreationResponse {\n");
            sb.Append("  Carrier: ").Append(Carrier).Append("\n");
            sb.Append("  IsCellphone: ").Append(IsCellphone).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("  SecondsToExpire: ").Append(SecondsToExpire).Append("\n");
            sb.Append("  Uuid: ").Append(Uuid).Append("\n");
            sb.Append("  Success: ").Append(Success).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PhoneVerificationCreationResponse);
        }

        /// <summary>
        /// Returns true if PhoneVerificationCreationResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of PhoneVerificationCreationResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PhoneVerificationCreationResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Carrier == input.Carrier ||
                    (this.Carrier != null &&
                    this.Carrier.Equals(input.Carrier))
                ) && 
                (
                    this.IsCellphone == input.IsCellphone ||
                    (this.IsCellphone != null &&
                    this.IsCellphone.Equals(input.IsCellphone))
                ) && 
                (
                    this.Message == input.Message ||
                    (this.Message != null &&
                    this.Message.Equals(input.Message))
                ) && 
                (
                    this.SecondsToExpire == input.SecondsToExpire ||
                    (this.SecondsToExpire != null &&
                    this.SecondsToExpire.Equals(input.SecondsToExpire))
                ) && 
                (
                    this.Uuid == input.Uuid ||
                    (this.Uuid != null &&
                    this.Uuid.Equals(input.Uuid))
                ) && 
                (
                    this.Success == input.Success ||
                    (this.Success != null &&
                    this.Success.Equals(input.Success))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Carrier != null)
                    hashCode = hashCode * 59 + this.Carrier.GetHashCode();
                if (this.IsCellphone != null)
                    hashCode = hashCode * 59 + this.IsCellphone.GetHashCode();
                if (this.Message != null)
                    hashCode = hashCode * 59 + this.Message.GetHashCode();
                if (this.SecondsToExpire != null)
                    hashCode = hashCode * 59 + this.SecondsToExpire.GetHashCode();
                if (this.Uuid != null)
                    hashCode = hashCode * 59 + this.Uuid.GetHashCode();
                if (this.Success != null)
                    hashCode = hashCode * 59 + this.Success.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
